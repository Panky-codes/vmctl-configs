#!/bin/bash

GUEST_BASE_BOOT="img/base.qcow2"
GUEST_BOOT="img/nvme-xfstests.qcow2"
SCRATCH="img/xfstests-scratch.qcow2"
SMALLBS="img/xfstests-smallbs.qcow2"

source "x86_64-q35-base.conf"

_setup_nvme_xfstests() {
  # setup basevm
  _setup_x86_64_q35_base

  qemu_drive_add "smallbs" \
    --file "$SMALLBS" \
    --format "qcow2" \
    --interface "virtio" \
    --discard

  qemu_drive_add "scratch" \
    --file "$SCRATCH" \
    --format "qcow2" \
    --interface "virtio" \
    --discard

  # pcie root port
#  qemu_pcie_add_root_port "pcie_root_port0" \
#    --chassis 1 --slot 0
#
#  # nvme controller
#  qemu_nvme_add_ctrl "nvme0" \
#    --serial "deadbeef" \
#    --port "pcie_root_port0" \
#    --extra "mdts=7"
#
#  # nvme namespace
#  qemu_nvme_add_ns "nvm" \
#    --nsid "1" \
#    --ctrl "nvme0" \
#    --size "8G" \
#    --extra "logical_block_size=512,physical_block_size=512"

  # pcie root port
#  qemu_pcie_add_root_port "pcie_root_port1" \
#    --chassis 1 --slot 1

#  qemu_nvme_add_ctrl "nvme1" \
#    --serial "deadbeef1" \
#    --port "pcie_root_port1" \
#    --extra "mdts=7"

  # nvme namespace
#  qemu_nvme_add_ns "nvm1" \
#    --nsid "1" \
#    --ctrl "nvme1" \
#    --size "8G" \
#    --extra "logical_block_size=4096,physical_block_size=4096"


  QEMU_PARAMS+=("-s")
  QEMU_PARAMS+=("-virtfs" "local,path=/home/panky/SW/tools/xfsprogs-dev,security_model=none,mount_tag=xfsprog")
  QEMU_PARAMS+=("-virtfs" "local,path=/home/panky/SW/tests/xfstests,security_model=none,mount_tag=xfstests")
  QEMU_PARAMS+=("-device" "vfio-pci,host=01:00.0")
}

 _pre() {
 	# Pre hook to run before starting QEMU

 	# unbind 0000:01:00.0 from nvme kernel module
	printf '0x144d 0xa80e' > /sys/bus/pci/drivers/vfio-pci/new_id
 	echo '0000:01:00.0' > /sys/bus/pci/drivers/nvme/unbind
 	echo '0000:01:00.0' > /sys/bus/pci/drivers/vfio-pci/bind
	printf '0x144d 0xa80e' > /sys/bus/pci/drivers/vfio-pci/remove_id
}

 _post() {
 	# Post hook to run after exiting QEMU

 	# unbind 0000:01:00.0 from vfio-pci kernel module
 	echo '0000:01:00.0' > /sys/bus/pci/drivers/vfio-pci/unbind
	printf 1 > /sys/bus/pci/devices/0000:01:00.0/remove

 	# bind 0000:01:00.0 to xhci_hcd kernel module
	#echo 0x144d 0xa80e > /sys/bus/pci/drivers/nvme/new_id

	printf 1 > /sys/bus/pci/rescan
}
